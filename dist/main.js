/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./1-Vanilla/index.js":
/*!****************************!*\
  !*** ./1-Vanilla/index.js ***!
  \****************************/
/***/ (() => {

eval("(function() {\n    let editedID = 0;\n    let editMode = false;\n    function getNewID(){\n        return Math.floor(Math.random()*1000)\n    }\n    function addItem(){\n        let title = getValue('title-input')\n        if (title ==''){\n            alert('cant add an item without a title')\n            return\n        }\n        if (editMode){\n            alert('cant add an item while in edit mode')\n            return\n        }\n        let content = getValue('content-input')\n        let list = document.getElementById('list')\n        let id = getNewID()\n        let itemElement = createTodoItemElement(id,title,content)\n    \n        list.appendChild(itemElement)\n        // now save to local storage\n        let itemString = `title: ${title};content: ${content}`\n        localStorage.setItem(id,itemString)\n    \n        // reset menu display\n        clearMenu()\n        setInnerText('menu-button','Add item')\n    }\n    \n    function sendItemToEdit(itemID){\n        \n        editedID = itemID\n        let title = getInnerText(`title${itemID}`)\n        let content = getInnerText(`content${itemID}`)\n        setValue('title-input',title)\n        setValue('content-input',content)\n        \n        editMode = true\n        document.getElementById('cancel-button').hidden = false\n        setInnerText('menu-button','Add changes')\n    }\n    \n    function deleteItem(itemID){\n        if(editMode){\n            alert('cant delete while in edit mode')\n            return\n        }\n        let item = document.getElementById(itemID)\n        let list = document.getElementById('list')\n        // remove from display\n        list.removeChild(item)\n        // remove from item storage\n        localStorage.removeItem(itemID)\n    }\n    \n    function cancelEdit(){\n        clearMenu()\n        editMode = false\n        setInnerText('menu-button','Add item')\n        document.getElementById('cancel-button').hidden = true\n        editedID = 0  \n    }\n    \n    function clearMenu(){\n        setValue('title-input','')\n        setValue('content-input','')\n    }\n    \n    function menuButtonClick(){\n        if(!editMode){\n            addItem()\n        }else{\n            if (getValue('title-input')==''){\n                alert('cant set an empty title')\n                return\n            }\n            let title = getValue('title-input')\n            let content = getValue('content-input')\n            setInnerText(`title${editedID}`,title)\n            setInnerText(`content${editedID}`,content)\n            // now update item in local storage\n            let itemObject = `title: ${title};content: ${content}`\n            localStorage.setItem(editedID,itemObject)\n    \n            clearMenu()\n            editMode = false\n            // document.getElementById('menu-button').innerText = 'Add item'\n            setInnerText('menu-button','Add item')\n            document.getElementById('cancel-button').hidden = true\n            editedID = 0\n        }\n    }\n    function addButton(){\n        clearMenu()\n        document.getElementById('title-input').focus()\n    }\n    function getValue(id){\n        return document.getElementById(id).value\n    }\n    function setValue(id,value){\n        document.getElementById(id).value = value\n    }\n    function getInnerText(id){\n        return document.getElementById(id).innerText\n    }\n    function setInnerText(id,text){\n        document.getElementById(id).innerText = text\n    }\n    function createTodoItemElement(itemID,title,content){\n    \n        // ol todo-item\n        let itemElement = document.createElement('ol')\n        itemElement.className = 'todo-item'\n        itemElement.id = itemID;\n        // input checkbox\n        let itemCheckboxElement = document.createElement('input')\n        itemCheckboxElement.type = 'checkbox'\n        itemCheckboxElement.className = 'item-checkbox'\n        // div todo-item-text\n        let itemTextElement = createItemTextElement(itemID,title,content)\n        let itemButtonsElement = createItemButtonsElement(itemID)\n        //append checkbox, text and buttons to list-item\n        itemElement.appendChild(itemCheckboxElement)\n        itemElement.appendChild(itemTextElement)\n        itemElement.appendChild(itemButtonsElement)\n    \n        return itemElement\n    }\n    function createItemButtonsElement(itemID){\n    \n        let itemButtonsElement = document.createElement('div')\n        itemButtonsElement.className = 'todo-item-buttons'\n        // button edit\n        let editButtonElement = document.createElement('button')\n        editButtonElement.innerText = 'edit'\n        editButtonElement.className = 'item-edit-button'\n        editButtonElement.setAttribute('onclick',`sendItemToEdit(${itemID})`)\n        // button delete\n        let deleteButtonElement = document.createElement('button')\n        deleteButtonElement.innerText = 'delete'\n        deleteButtonElement.className = 'item-delete-button'\n        deleteButtonElement.setAttribute('onclick',`deleteItem(${itemID})`)\n        // append the buttons to container\n        itemButtonsElement.appendChild(editButtonElement)\n        itemButtonsElement.appendChild(deleteButtonElement)\n    \n        return itemButtonsElement\n    }\n    function createItemTextElement(itemID,title,content){\n    \n        let itemTextElement = document.createElement('div')\n        itemTextElement.className = 'todo-item-text'\n        // item title\n        let titleElement = document.createElement('div')\n        titleElement.innerText = title\n        titleElement.className = 'todo-item-title'\n        titleElement.id = 'title'+itemID\n        // item content\n        let contentElement = document.createElement('div')\n        contentElement.innerText = content\n        contentElement.className = 'todo-item-content'\n        contentElement.id = 'content'+itemID\n        // append text to parent container \n        itemTextElement.appendChild(titleElement)\n        itemTextElement.appendChild(contentElement)\n    \n        return itemTextElement\n    }\n\n    // attach functions to menu buttons\n    window.onload = function(){\n\n        \n        // document.getElementById('clear-button').setAttribute('onclick','clearMenu()')\n        // document.getElementById('menu-button').setAttribute('onclick','menuButtonClick()')\n        // document.getElementById('cancel-button').setAttribute('onclick','cancelEdit()')\n        // document.getElementById('add-button').setAttribute('onclick','addButton()')\n        document.getElementById('clear-button').onclick = clearMenu\n        document.getElementById('menu-button').onclick = menuButtonClick\n        document.getElementById('cancel-button').onclick = cancelEdit\n        document.getElementById('add-button').onclick = addButton\n        // load display todo items from local storage\n        let list = document.getElementById('list')\n        for (let key in localStorage) {\n            if(isNaN(Number(key)))\n                continue;\n            let itemString = localStorage.getItem(key)\n            itemString = itemString.split(';')\n            let title = itemString[0].split(':')[1]\n            let content = itemString[1].split(':')[1]\n            let itemElement = createTodoItemElement(Number(key),title,content)\n            list.appendChild(itemElement)\n        }\n    }\n\n})();\n// let editedID = 0;\n// let editMode = false;\n\n// // attach functions to menu buttons\n// window.onload = function(){\n\n//     function getNewID(){\n//         return Math.floor(Math.random()*1000)\n//     }\n//     function addItem(){\n//         let title = getValue('title-input')\n//         if (title ==''){\n//             alert('cant add an item without a title')\n//             return\n//         }\n//         if (editMode){\n//             alert('cant add an item while in edit mode')\n//             return\n//         }\n//         let content = getValue('content-input')\n//         let list = document.getElementById('list')\n//         let id = getNewID()\n//         let itemElement = createTodoItemElement(id,title,content)\n    \n//         list.appendChild(itemElement)\n//         // now save to local storage\n//         let itemString = `title: ${title};content: ${content}`\n//         localStorage.setItem(id,itemString)\n    \n//         // reset menu display\n//         clearMenu()\n//         setInnerText('menu-button','Add item')\n//     }\n    \n//     function sendItemToEdit(itemID){\n        \n//         editedID = itemID\n//         let title = getInnerText(`title${itemID}`)\n//         let content = getInnerText(`content${itemID}`)\n//         setValue('title-input',title)\n//         setValue('content-input',content)\n        \n//         editMode = true\n//         document.getElementById('cancel-button').hidden = false\n//         setInnerText('menu-button','Add changes')\n//     }\n    \n//     function deleteItem(itemID){\n//         if(editMode){\n//             alert('cant delete while in edit mode')\n//             return\n//         }\n//         let item = document.getElementById(itemID)\n//         let list = document.getElementById('list')\n//         // remove from display\n//         list.removeChild(item)\n//         // remove from item storage\n//         localStorage.removeItem(itemID)\n//     }\n    \n//     function cancelEdit(){\n//         clearMenu()\n//         editMode = false\n//         setInnerText('menu-button','Add item')\n//         document.getElementById('cancel-button').hidden = true\n//         editedID = 0  \n//     }\n    \n//     function clearMenu(){\n//         setValue('title-input','')\n//         setValue('content-input','')\n//     }\n    \n//     function menuButtonClick(){\n//         if(!editMode){\n//             addItem()\n//         }else{\n//             if (getValue('title-input')==''){\n//                 alert('cant set an empty title')\n//                 return\n//             }\n//             let title = getValue('title-input')\n//             let content = getValue('content-input')\n//             setInnerText(`title${editedID}`,title)\n//             setInnerText(`content${editedID}`,content)\n//             // now update item in local storage\n//             let itemObject = `title: ${title};content: ${content}`\n//             localStorage.setItem(editedID,itemObject)\n    \n//             clearMenu()\n//             editMode = false\n//             // document.getElementById('menu-button').innerText = 'Add item'\n//             setInnerText('menu-button','Add item')\n//             document.getElementById('cancel-button').hidden = true\n//             editedID = 0\n//         }\n//     }\n//     function addButton(){\n//         clearMenu()\n//         document.getElementById('title-input').focus()\n//     }\n//     function getValue(id){\n//         return document.getElementById(id).value\n//     }\n//     function setValue(id,value){\n//         document.getElementById(id).value = value\n//     }\n//     function getInnerText(id){\n//         return document.getElementById(id).innerText\n//     }\n//     function setInnerText(id,text){\n//         document.getElementById(id).innerText = text\n//     }\n//     function createTodoItemElement(itemID,title,content){\n    \n//         // ol todo-item\n//         let itemElement = document.createElement('ol')\n//         itemElement.className = 'todo-item'\n//         itemElement.id = itemID;\n//         // input checkbox\n//         let itemCheckboxElement = document.createElement('input')\n//         itemCheckboxElement.type = 'checkbox'\n//         itemCheckboxElement.className = 'item-checkbox'\n//         // div todo-item-text\n//         let itemTextElement = createItemTextElement(itemID,title,content)\n//         let itemButtonsElement = createItemButtonsElement(itemID)\n//         //append checkbox, text and buttons to list-item\n//         itemElement.appendChild(itemCheckboxElement)\n//         itemElement.appendChild(itemTextElement)\n//         itemElement.appendChild(itemButtonsElement)\n    \n//         return itemElement\n//     }\n//     function createItemButtonsElement(itemID){\n    \n//         let itemButtonsElement = document.createElement('div')\n//         itemButtonsElement.className = 'todo-item-buttons'\n//         // button edit\n//         let editButtonElement = document.createElement('button')\n//         editButtonElement.innerText = 'edit'\n//         editButtonElement.className = 'item-edit-button'\n//         editButtonElement.setAttribute('onclick',`sendItemToEdit(${itemID})`)\n//         // button delete\n//         let deleteButtonElement = document.createElement('button')\n//         deleteButtonElement.innerText = 'delete'\n//         deleteButtonElement.className = 'item-delete-button'\n//         deleteButtonElement.setAttribute('onclick',`deleteItem(${itemID})`)\n//         // append the buttons to container\n//         itemButtonsElement.appendChild(editButtonElement)\n//         itemButtonsElement.appendChild(deleteButtonElement)\n    \n//         return itemButtonsElement\n//     }\n//     function createItemTextElement(itemID,title,content){\n    \n//         let itemTextElement = document.createElement('div')\n//         itemTextElement.className = 'todo-item-text'\n//         // item title\n//         let titleElement = document.createElement('div')\n//         titleElement.innerText = title\n//         titleElement.className = 'todo-item-title'\n//         titleElement.id = 'title'+itemID\n//         // item content\n//         let contentElement = document.createElement('div')\n//         contentElement.innerText = content\n//         contentElement.className = 'todo-item-content'\n//         contentElement.id = 'content'+itemID\n//         // append text to parent container \n//         itemTextElement.appendChild(titleElement)\n//         itemTextElement.appendChild(contentElement)\n    \n//         return itemTextElement\n//      }\n\n//     document.getElementById('clear-button').setAttribute('onclick','clearMenu()')\n//     document.getElementById('menu-button').setAttribute('onclick','menuButtonClick()')\n//     document.getElementById('cancel-button').setAttribute('onclick','cancelEdit()')\n//     document.getElementById('add-button').setAttribute('onclick','addButton()')\n//     // document.getElementById('clear-button').onclick = clearMenu\n//     // document.getElementById('menu-button').onclick = menuButtonClick\n//     // document.getElementById('cancel-button').onclick = cancelEdit\n//     // document.getElementById('add-button').onclick = addButton\n//     // load display todo items from local storage\n//     let list = document.getElementById('list')\n//     for (let key in localStorage) {\n//         if(isNaN(Number(key)))\n//             continue;\n//         let itemString = localStorage.getItem(key)\n//         itemString = itemString.split(';')\n//         let title = itemString[0].split(':')[1]\n//         let content = itemString[1].split(':')[1]\n//         let itemElement = createTodoItemElement(Number(key),title,content)\n//         list.appendChild(itemElement)\n//     }\n// }\n\n\n//# sourceURL=webpack://karate-kid-kickstart/./1-Vanilla/index.js?");

/***/ }),

/***/ "./dist/main.js":
/*!**********************!*\
  !*** ./dist/main.js ***!
  \**********************/
/***/ (() => {

eval("/*\n * ATTENTION: The \"eval\" devtool has been used (maybe by default in mode: \"development\").\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n/******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./1-Vanilla/index.js\":\n/*!****************************!*\\\n  !*** ./1-Vanilla/index.js ***!\n  \\****************************/\n/***/ (() => {\n\neval(\"(function() {\\n    let editedID = 0;\\n    let editMode = false;\\n    function getNewID(){\\n        return Math.floor(Math.random()*1000)\\n    }\\n    function addItem(){\\n        let title = getValue('title-input')\\n        if (title ==''){\\n            alert('cant add an item without a title')\\n            return\\n        }\\n        if (editMode){\\n            alert('cant add an item while in edit mode')\\n            return\\n        }\\n        let content = getValue('content-input')\\n        let list = document.getElementById('list')\\n        let id = getNewID()\\n        let itemElement = createTodoItemElement(id,title,content)\\n    \\n        list.appendChild(itemElement)\\n        // now save to local storage\\n        let itemString = `title: ${title};content: ${content}`\\n        localStorage.setItem(id,itemString)\\n    \\n        // reset menu display\\n        clearMenu()\\n        setInnerText('menu-button','Add item')\\n    }\\n    \\n    function sendItemToEdit(itemID){\\n        \\n        editedID = itemID\\n        let title = getInnerText(`title${itemID}`)\\n        let content = getInnerText(`content${itemID}`)\\n        setValue('title-input',title)\\n        setValue('content-input',content)\\n        \\n        editMode = true\\n        document.getElementById('cancel-button').hidden = false\\n        setInnerText('menu-button','Add changes')\\n    }\\n    \\n    function deleteItem(itemID){\\n        if(editMode){\\n            alert('cant delete while in edit mode')\\n            return\\n        }\\n        let item = document.getElementById(itemID)\\n        let list = document.getElementById('list')\\n        // remove from display\\n        list.removeChild(item)\\n        // remove from item storage\\n        localStorage.removeItem(itemID)\\n    }\\n    \\n    function cancelEdit(){\\n        clearMenu()\\n        editMode = false\\n        setInnerText('menu-button','Add item')\\n        document.getElementById('cancel-button').hidden = true\\n        editedID = 0  \\n    }\\n    \\n    function clearMenu(){\\n        setValue('title-input','')\\n        setValue('content-input','')\\n    }\\n    \\n    function menuButtonClick(){\\n        if(!editMode){\\n            addItem()\\n        }else{\\n            if (getValue('title-input')==''){\\n                alert('cant set an empty title')\\n                return\\n            }\\n            let title = getValue('title-input')\\n            let content = getValue('content-input')\\n            setInnerText(`title${editedID}`,title)\\n            setInnerText(`content${editedID}`,content)\\n            // now update item in local storage\\n            let itemObject = `title: ${title};content: ${content}`\\n            localStorage.setItem(editedID,itemObject)\\n    \\n            clearMenu()\\n            editMode = false\\n            // document.getElementById('menu-button').innerText = 'Add item'\\n            setInnerText('menu-button','Add item')\\n            document.getElementById('cancel-button').hidden = true\\n            editedID = 0\\n        }\\n    }\\n    function addButton(){\\n        clearMenu()\\n        document.getElementById('title-input').focus()\\n    }\\n    function getValue(id){\\n        return document.getElementById(id).value\\n    }\\n    function setValue(id,value){\\n        document.getElementById(id).value = value\\n    }\\n    function getInnerText(id){\\n        return document.getElementById(id).innerText\\n    }\\n    function setInnerText(id,text){\\n        document.getElementById(id).innerText = text\\n    }\\n    function createTodoItemElement(itemID,title,content){\\n    \\n        // ol todo-item\\n        let itemElement = document.createElement('ol')\\n        itemElement.className = 'todo-item'\\n        itemElement.id = itemID;\\n        // input checkbox\\n        let itemCheckboxElement = document.createElement('input')\\n        itemCheckboxElement.type = 'checkbox'\\n        itemCheckboxElement.className = 'item-checkbox'\\n        // div todo-item-text\\n        let itemTextElement = createItemTextElement(itemID,title,content)\\n        let itemButtonsElement = createItemButtonsElement(itemID)\\n        //append checkbox, text and buttons to list-item\\n        itemElement.appendChild(itemCheckboxElement)\\n        itemElement.appendChild(itemTextElement)\\n        itemElement.appendChild(itemButtonsElement)\\n    \\n        return itemElement\\n    }\\n    function createItemButtonsElement(itemID){\\n    \\n        let itemButtonsElement = document.createElement('div')\\n        itemButtonsElement.className = 'todo-item-buttons'\\n        // button edit\\n        let editButtonElement = document.createElement('button')\\n        editButtonElement.innerText = 'edit'\\n        editButtonElement.className = 'item-edit-button'\\n        editButtonElement.setAttribute('onclick',`sendItemToEdit(${itemID})`)\\n        // button delete\\n        let deleteButtonElement = document.createElement('button')\\n        deleteButtonElement.innerText = 'delete'\\n        deleteButtonElement.className = 'item-delete-button'\\n        deleteButtonElement.setAttribute('onclick',`deleteItem(${itemID})`)\\n        // append the buttons to container\\n        itemButtonsElement.appendChild(editButtonElement)\\n        itemButtonsElement.appendChild(deleteButtonElement)\\n    \\n        return itemButtonsElement\\n    }\\n    function createItemTextElement(itemID,title,content){\\n    \\n        let itemTextElement = document.createElement('div')\\n        itemTextElement.className = 'todo-item-text'\\n        // item title\\n        let titleElement = document.createElement('div')\\n        titleElement.innerText = title\\n        titleElement.className = 'todo-item-title'\\n        titleElement.id = 'title'+itemID\\n        // item content\\n        let contentElement = document.createElement('div')\\n        contentElement.innerText = content\\n        contentElement.className = 'todo-item-content'\\n        contentElement.id = 'content'+itemID\\n        // append text to parent container \\n        itemTextElement.appendChild(titleElement)\\n        itemTextElement.appendChild(contentElement)\\n    \\n        return itemTextElement\\n    }\\n\\n    // attach functions to menu buttons\\n    window.onload = function(){\\n\\n        \\n        // document.getElementById('clear-button').setAttribute('onclick','clearMenu()')\\n        // document.getElementById('menu-button').setAttribute('onclick','menuButtonClick()')\\n        // document.getElementById('cancel-button').setAttribute('onclick','cancelEdit()')\\n        // document.getElementById('add-button').setAttribute('onclick','addButton()')\\n        document.getElementById('clear-button').onclick = clearMenu\\n        document.getElementById('menu-button').onclick = menuButtonClick\\n        document.getElementById('cancel-button').onclick = cancelEdit\\n        document.getElementById('add-button').onclick = addButton\\n        // load display todo items from local storage\\n        let list = document.getElementById('list')\\n        for (let key in localStorage) {\\n            if(isNaN(Number(key)))\\n                continue;\\n            let itemString = localStorage.getItem(key)\\n            itemString = itemString.split(';')\\n            let title = itemString[0].split(':')[1]\\n            let content = itemString[1].split(':')[1]\\n            let itemElement = createTodoItemElement(Number(key),title,content)\\n            list.appendChild(itemElement)\\n        }\\n    }\\n\\n})();\\n// let editedID = 0;\\n// let editMode = false;\\n\\n// // attach functions to menu buttons\\n// window.onload = function(){\\n\\n//     function getNewID(){\\n//         return Math.floor(Math.random()*1000)\\n//     }\\n//     function addItem(){\\n//         let title = getValue('title-input')\\n//         if (title ==''){\\n//             alert('cant add an item without a title')\\n//             return\\n//         }\\n//         if (editMode){\\n//             alert('cant add an item while in edit mode')\\n//             return\\n//         }\\n//         let content = getValue('content-input')\\n//         let list = document.getElementById('list')\\n//         let id = getNewID()\\n//         let itemElement = createTodoItemElement(id,title,content)\\n    \\n//         list.appendChild(itemElement)\\n//         // now save to local storage\\n//         let itemString = `title: ${title};content: ${content}`\\n//         localStorage.setItem(id,itemString)\\n    \\n//         // reset menu display\\n//         clearMenu()\\n//         setInnerText('menu-button','Add item')\\n//     }\\n    \\n//     function sendItemToEdit(itemID){\\n        \\n//         editedID = itemID\\n//         let title = getInnerText(`title${itemID}`)\\n//         let content = getInnerText(`content${itemID}`)\\n//         setValue('title-input',title)\\n//         setValue('content-input',content)\\n        \\n//         editMode = true\\n//         document.getElementById('cancel-button').hidden = false\\n//         setInnerText('menu-button','Add changes')\\n//     }\\n    \\n//     function deleteItem(itemID){\\n//         if(editMode){\\n//             alert('cant delete while in edit mode')\\n//             return\\n//         }\\n//         let item = document.getElementById(itemID)\\n//         let list = document.getElementById('list')\\n//         // remove from display\\n//         list.removeChild(item)\\n//         // remove from item storage\\n//         localStorage.removeItem(itemID)\\n//     }\\n    \\n//     function cancelEdit(){\\n//         clearMenu()\\n//         editMode = false\\n//         setInnerText('menu-button','Add item')\\n//         document.getElementById('cancel-button').hidden = true\\n//         editedID = 0  \\n//     }\\n    \\n//     function clearMenu(){\\n//         setValue('title-input','')\\n//         setValue('content-input','')\\n//     }\\n    \\n//     function menuButtonClick(){\\n//         if(!editMode){\\n//             addItem()\\n//         }else{\\n//             if (getValue('title-input')==''){\\n//                 alert('cant set an empty title')\\n//                 return\\n//             }\\n//             let title = getValue('title-input')\\n//             let content = getValue('content-input')\\n//             setInnerText(`title${editedID}`,title)\\n//             setInnerText(`content${editedID}`,content)\\n//             // now update item in local storage\\n//             let itemObject = `title: ${title};content: ${content}`\\n//             localStorage.setItem(editedID,itemObject)\\n    \\n//             clearMenu()\\n//             editMode = false\\n//             // document.getElementById('menu-button').innerText = 'Add item'\\n//             setInnerText('menu-button','Add item')\\n//             document.getElementById('cancel-button').hidden = true\\n//             editedID = 0\\n//         }\\n//     }\\n//     function addButton(){\\n//         clearMenu()\\n//         document.getElementById('title-input').focus()\\n//     }\\n//     function getValue(id){\\n//         return document.getElementById(id).value\\n//     }\\n//     function setValue(id,value){\\n//         document.getElementById(id).value = value\\n//     }\\n//     function getInnerText(id){\\n//         return document.getElementById(id).innerText\\n//     }\\n//     function setInnerText(id,text){\\n//         document.getElementById(id).innerText = text\\n//     }\\n//     function createTodoItemElement(itemID,title,content){\\n    \\n//         // ol todo-item\\n//         let itemElement = document.createElement('ol')\\n//         itemElement.className = 'todo-item'\\n//         itemElement.id = itemID;\\n//         // input checkbox\\n//         let itemCheckboxElement = document.createElement('input')\\n//         itemCheckboxElement.type = 'checkbox'\\n//         itemCheckboxElement.className = 'item-checkbox'\\n//         // div todo-item-text\\n//         let itemTextElement = createItemTextElement(itemID,title,content)\\n//         let itemButtonsElement = createItemButtonsElement(itemID)\\n//         //append checkbox, text and buttons to list-item\\n//         itemElement.appendChild(itemCheckboxElement)\\n//         itemElement.appendChild(itemTextElement)\\n//         itemElement.appendChild(itemButtonsElement)\\n    \\n//         return itemElement\\n//     }\\n//     function createItemButtonsElement(itemID){\\n    \\n//         let itemButtonsElement = document.createElement('div')\\n//         itemButtonsElement.className = 'todo-item-buttons'\\n//         // button edit\\n//         let editButtonElement = document.createElement('button')\\n//         editButtonElement.innerText = 'edit'\\n//         editButtonElement.className = 'item-edit-button'\\n//         editButtonElement.setAttribute('onclick',`sendItemToEdit(${itemID})`)\\n//         // button delete\\n//         let deleteButtonElement = document.createElement('button')\\n//         deleteButtonElement.innerText = 'delete'\\n//         deleteButtonElement.className = 'item-delete-button'\\n//         deleteButtonElement.setAttribute('onclick',`deleteItem(${itemID})`)\\n//         // append the buttons to container\\n//         itemButtonsElement.appendChild(editButtonElement)\\n//         itemButtonsElement.appendChild(deleteButtonElement)\\n    \\n//         return itemButtonsElement\\n//     }\\n//     function createItemTextElement(itemID,title,content){\\n    \\n//         let itemTextElement = document.createElement('div')\\n//         itemTextElement.className = 'todo-item-text'\\n//         // item title\\n//         let titleElement = document.createElement('div')\\n//         titleElement.innerText = title\\n//         titleElement.className = 'todo-item-title'\\n//         titleElement.id = 'title'+itemID\\n//         // item content\\n//         let contentElement = document.createElement('div')\\n//         contentElement.innerText = content\\n//         contentElement.className = 'todo-item-content'\\n//         contentElement.id = 'content'+itemID\\n//         // append text to parent container \\n//         itemTextElement.appendChild(titleElement)\\n//         itemTextElement.appendChild(contentElement)\\n    \\n//         return itemTextElement\\n//      }\\n\\n//     document.getElementById('clear-button').setAttribute('onclick','clearMenu()')\\n//     document.getElementById('menu-button').setAttribute('onclick','menuButtonClick()')\\n//     document.getElementById('cancel-button').setAttribute('onclick','cancelEdit()')\\n//     document.getElementById('add-button').setAttribute('onclick','addButton()')\\n//     // document.getElementById('clear-button').onclick = clearMenu\\n//     // document.getElementById('menu-button').onclick = menuButtonClick\\n//     // document.getElementById('cancel-button').onclick = cancelEdit\\n//     // document.getElementById('add-button').onclick = addButton\\n//     // load display todo items from local storage\\n//     let list = document.getElementById('list')\\n//     for (let key in localStorage) {\\n//         if(isNaN(Number(key)))\\n//             continue;\\n//         let itemString = localStorage.getItem(key)\\n//         itemString = itemString.split(';')\\n//         let title = itemString[0].split(':')[1]\\n//         let content = itemString[1].split(':')[1]\\n//         let itemElement = createTodoItemElement(Number(key),title,content)\\n//         list.appendChild(itemElement)\\n//     }\\n// }\\n\\n\\n//# sourceURL=webpack://karate-kid-kickstart/./1-Vanilla/index.js?\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module can't be inlined because the eval devtool is used.\n/******/ \tvar __webpack_exports__ = {};\n/******/ \t__webpack_modules__[\"./1-Vanilla/index.js\"]();\n/******/ \t\n/******/ })()\n;\n\n//# sourceURL=webpack://karate-kid-kickstart/./dist/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_modules__["./1-Vanilla/index.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./dist/main.js"]();
/******/ 	
/******/ })()
;