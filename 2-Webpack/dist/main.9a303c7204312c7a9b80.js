/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
var editedID = 0;
var editMode = false;

function getNewID() {
  return new Date().getTime().toString();
}

function addItem() {
  var title = getValue('title-input');

  if (title == '') {
    alert('cant add an item without a title');
    return;
  }

  if (editMode) {
    alert('cant add an item while in edit mode');
    return;
  }

  var content = getValue('content-input');
  var list = document.getElementById('list');
  var id = getNewID();
  var itemElement = createTodoItemElement(id, title, content);
  list.appendChild(itemElement); // now save to local storage

  var itemString = "title: ".concat(title, ";content: ").concat(content);
  localStorage.setItem(id, itemString); // reset menu display

  clearMenu();
  setInnerText('menu-button', 'Add');
}

function sendItemToEdit(itemID) {
  editedID = itemID;
  var title = getInnerText("title".concat(itemID));
  var content = getInnerText("content".concat(itemID));
  setValue('title-input', title);
  setValue('content-input', content);
  editMode = true;
  document.getElementById('cancel-button').hidden = false;
  setInnerText('menu-button', 'Apply');
}

function deleteItem(itemID) {
  if (editMode) {
    alert('cant delete while in edit mode');
    return;
  }

  var item = document.getElementById(itemID);
  var list = document.getElementById('list'); // remove from display

  list.removeChild(item); // remove from item storage

  localStorage.removeItem(itemID);
}

function cancelEdit() {
  clearMenu();
  editMode = false;
  setInnerText('menu-button', 'Add');
  document.getElementById('cancel-button').hidden = true;
  editedID = 0;
}

function clearMenu() {
  setValue('title-input', '');
  setValue('content-input', '');
}

function menuButtonClick() {
  if (!editMode) {
    // adding a new item
    addItem();
  } else {
    // editing an existing item
    if (getValue('title-input') == '') {
      alert('cant set an empty title');
      return;
    }

    var title = getValue('title-input');
    var content = getValue('content-input');
    setInnerText("title".concat(editedID), title);
    setInnerText("content".concat(editedID), content); // now update item in local storage

    var itemObject = "title: ".concat(title, ";content: ").concat(content);
    localStorage.setItem(editedID, itemObject); // revert menu back to default state

    clearMenu();
    editMode = false;
    setInnerText('menu-button', 'Add');
    document.getElementById('cancel-button').hidden = true;
    editedID = 0;
  }
}

function addButton() {
  clearMenu();
  document.getElementById('title-input').focus();
}

function getValue(id) {
  return document.getElementById(id).value;
}

function setValue(id, value) {
  document.getElementById(id).value = value;
}

function getInnerText(id) {
  return document.getElementById(id).innerText;
}

function setInnerText(id, text) {
  document.getElementById(id).innerText = text;
}

function createTodoItemElement(itemID, title, content) {
  // ol todo-item
  var itemElement = document.createElement('ol');
  itemElement.className = 'todo-item';
  itemElement.id = itemID; // input checkbox

  var itemCheckboxElement = document.createElement('input');
  itemCheckboxElement.type = 'checkbox';
  itemCheckboxElement.className = 'item-checkbox'; // div todo-item-text

  var itemTextElement = createItemTextElement(itemID, title, content);
  var itemButtonsElement = createItemButtonsElement(itemID); // append checkbox, text and buttons to list-item

  itemElement.appendChild(itemCheckboxElement);
  itemElement.appendChild(itemTextElement);
  itemElement.appendChild(itemButtonsElement);
  return itemElement;
}

function createItemButtonsElement(itemID) {
  var itemButtonsElement = document.createElement('div');
  itemButtonsElement.className = 'todo-item-buttons'; // button edit

  var editButtonElement = document.createElement('button');
  editButtonElement.innerText = 'edit';
  editButtonElement.className = 'item-edit-button';

  editButtonElement.onclick = function () {
    // set menu to editing state
    editMode = true;
    editedID = itemID;
    document.getElementById('cancel-button').hidden = false;
    setInnerText('menu-button', 'Apply');
    var title = getInnerText("title".concat(itemID));
    var content = getInnerText("content".concat(itemID));
    setValue('title-input', title);
    setValue('content-input', content);
  }; // button delete


  var deleteButtonElement = document.createElement('button');
  deleteButtonElement.innerText = 'delete';
  deleteButtonElement.className = 'item-delete-button';
  deleteButtonElement.setAttribute('onclick', "deleteItem(".concat(itemID, ")"));

  deleteButtonElement.onclick = function () {
    if (editMode) {
      alert('cant delete while in edit mode');
      return;
    }

    var item = document.getElementById(itemID);
    var list = document.getElementById('list'); // remove from display

    list.removeChild(item); // remove from item storage

    localStorage.removeItem(itemID);
  }; // append the buttons to container


  itemButtonsElement.appendChild(editButtonElement);
  itemButtonsElement.appendChild(deleteButtonElement);
  return itemButtonsElement;
}

function createItemTextElement(itemID, title, content) {
  var itemTextElement = document.createElement('div');
  itemTextElement.className = 'todo-item-text'; // item title

  var titleElement = document.createElement('div');
  titleElement.innerText = title;
  titleElement.className = 'todo-item-title';
  titleElement.id = 'title' + itemID; // item content

  var contentElement = document.createElement('div');
  contentElement.innerText = content;
  contentElement.className = 'todo-item-content';
  contentElement.id = 'content' + itemID; // append text to parent container 

  itemTextElement.appendChild(titleElement);
  itemTextElement.appendChild(contentElement);
  return itemTextElement;
}

window.onload = function () {
  // attach functions to menu buttons
  document.getElementById('menu').addEventListener('keyup', function (event) {
    if (event.keyCode === 13) {
      document.getElementById('menu-button').click();
      document.getElementById('title-input').focus();
    }
  });
  document.getElementById('clear-button').onclick = clearMenu;
  document.getElementById('menu-button').onclick = menuButtonClick;
  document.getElementById('cancel-button').onclick = cancelEdit;
  document.getElementById('add-button').onclick = addButton; // load and display todo items from local storage

  var list = document.getElementById('list');

  for (var key in localStorage) {
    if (isNaN(Number(key))) continue;
    var itemString = localStorage.getItem(key).split(';');
    var title = itemString[0].split(':')[1];
    var content = itemString[1].split(':')[1];
    var itemElement = createTodoItemElement(Number(key), title, content);
    list.appendChild(itemElement);
  }
};
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,